swagger: '2.0'
info:
  description: API for shared server
  title: FiUber - Shared Server API
  version: 1.0.0
host: '0.0.0.0:3000'
schemes:
  - http
basePath: /api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  AuthToken:
    type: apiKey
    in: header
    name: AuthToken
tags:
  - name: info
    description: |
      Informacion general de la api
  - name: app
    description: |
      Llamados que puede realizar los Application Server
  - name: admin
    description: >
      Llamados que puede realizar los usuarios de negocio con perfil
      adminstrador
  - name: manager
    description: |
      Llamados que puede realizar los usuarios de negocio con perfil gerente
  - name: user
    description: |
      Llamados que puede realizar los usuarios de negocio con perfil usuario
paths:
  /api:
    get:
      summary: APIS's general info 
      tags:
        - info
      description: |
        Returns general info about the API.
      responses:
        '200':
          description: API's info
          schema:
            $ref: "#/definitions/ApiInfo"
                
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors"
  /auth/token:
    post:
      summary: FiUber business user
      parameters:
        - description: "Credential fields"
          in: body
          name: ''
          required: true
          schema:
            $ref: "#/definitions/Credential" 
      description: |
        Returns Business User token
      responses:
        '201':
          description: Token
          schema:
            properties:
              token:
                type: string
        '400':
          description: Bad request
          schema:
            $ref: "#/definitions/Error"
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors"       
            
  /users:
    get:
      summary: FiUber users listing
      tags:
        - app
      security:
        - AuthToken: []
      description: |
        Returns all the registrated users (drivers and passengers).
      responses:
        '200':
          description: Users
          schema:
            type: array
            items:
              $ref: "#/definitions/User" 
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
    post:
      summary: FiUber user registration
      tags:
        - app
      security:
        - AuthToken: []
      description: |
        Registers a FiUber user.
      parameters:
        - description: "User fields"
          in: body
          name: ''
          required: true
          schema:
            $ref: "#/definitions/UserCreate" 
      responses:
        '200':
          description: Returns registered id
          schema:
            properties:
              id:
                $ref: "#/definitions/Id" 
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
            
  /users/{userId}:
    parameters:
      - description: "user's identifier"
        in: path
        name: userId
        required: true
        type: integer
    get:
      summary: FiUber user fetch
      tags:
        - app
      security:
        - AuthToken: []
      description: |
        Returns registrated user with {userId}.
      responses:
        '200':
          description: User
          schema:
              $ref: "#/definitions/User" 
        '404':
          description: User not found
          schema:
            $ref: "#/definitions/Error"
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
    put: 
      summary: Update FiUber update
      tags:
        - app
      security:
        - AuthToken: []
      description: |
        Updates registrated user with {userId}.
      parameters:
        - description: "User fields"
          in: body
          name: ''
          required: true
          schema:
            $ref: "#/definitions/UserCreate"
      responses:
        '200':
          description: User updated
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
    delete: 
      summary: FiUber user deletion
      tags:
        - app
      security:
        - AuthToken: []
      description: |
        Deletes registrated user with {userId}.
      responses:
        '200':
          description: User deleted
        '404':
          description: User not found
          schema:
            $ref: "#/definitions/Error"
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
            
  /users/{userId}/cars:
    parameters:
      - description: "user's identifier"
        in: path
        name: userId
        required: true
        type: integer
    post:
      summary: FiUber user validation
      tags:
        - app
      security:
        - AuthToken: []
      description: |
        Validates a FiUber user.
      parameters:
        - description: "Car fields"
          in: body
          name: ''
          required: true
          schema:
            $ref: "#/definitions/CarCreate"
      responses:
        '200':
          description: Car Created
        '401':
          description: Unauthorized
          schema:
              $ref: "#/definitions/Error"               
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors"
            
  /users/{userId}/cars/{carId}:
    parameters:
      - description: "user's identifier"
        in: path
        name: userId
        required: true
        type: integer
      - description: "car's identifier"
        in: path
        name: carId
        required: true
        type: integer
    delete:
      summary: FiUber car deletion
      tags:
        - app manager
      security:
        - AuthToken: []
      description: |
        Deletes registrated car from {userId} with {carId}.
      responses:
        '200':
          description: Car deleted
        '404':
          description: Car not found
          schema:
            $ref: "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
              $ref: "#/definitions/Error"    
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
  
  /users/validate:
    post:
      summary: FiUber user validation
      tags:
        - app
      security:
        - AuthToken: []
      description: |
        Validates a FiUber user.
      parameters:
        - description: "Credential fields"
          in: body
          name: ''
          required: true
          schema:
            $ref: "#/definitions/Credential" 
      responses:
        '200':
          description: Returns the user info
          schema:
              $ref: "#/definitions/User" 
        '401':
          description: Unauthorized
          schema:
              $ref: "#/definitions/Error"               
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
      
  
  /business-users:
     get:
      summary: FiUber business users listing
      tags:
        - admin
      security:
        - AuthToken: []
      description: |
        Returns all the registrated business users (app, admin, managers).
      responses:
        '200':
          description: Business Users
          schema:
            type: array
            items:
              $ref: "#/definitions/BusinessUser" 
        '401':
          description: Unauthorized
          schema:
              $ref: "#/definitions/Error"  
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
     post:
      summary: FiUber business user registration
      tags:
        - admin 
        - app
      description: |
        Registers a FiUber user.
      parameters:
        - description: "User fields"
          in: body
          name: ''
          required: true
          schema:
            $ref: "#/definitions/BusinessUserCreate" 
      responses:
        '200':
          description: Returns registered id
          schema:
            properties:
              id:
                $ref: "#/definitions/Id" 
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors"
            
  /business-users/me:
    get:
      summary: FiUber business user fetch
      tags:
        - admin
        - app 
      security:
        - AuthToken: []
      description: |
        Returns connected user info based on token.
      responses:
        '200':
          description: Business User
          schema:
              $ref: "#/definitions/BusinessUser" 
        '401':
          description: UnAuthorized
          schema:
            $ref: "#/definitions/Error"
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
            
  /business-users/{userId}:
    parameters:
      - description: "business user's identifier"
        in: path
        name: userId
        required: true
        type: integer
    get:
      summary: FiUber business user fetch
      tags:
        - admin
      security:
        - AuthToken: []
      description: |
        Returns registrated business user with {userId}.
      responses:
        '200':
          description: Business User
          schema:
              $ref: "#/definitions/BusinessUser" 
        '401':
          description: Unauthorized
          schema:
              $ref: "#/definitions/Error"  
        '404':
          description: Business User not found
          schema:
            $ref: "#/definitions/Error"
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
    put: 
      summary: FiUber business user update 
      tags:
        - admin
      security:
        - AuthToken: []
      description: |
        Updates registrated business user with {userId}.
      parameters:
        - description: "Business User fields"
          in: body
          name: ''
          required: true
          schema:
            $ref: "#/definitions/BusinessUserCreate"
      responses:
        '200':
          description: Business User updated
        '401':
          description: Unauthorized
          schema:
              $ref: "#/definitions/Error"  
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
    delete: 
      summary: FiUber business user deletion
      tags:
        - app
      security:
        - AuthToken: []
      description: |
        Deletes registrated business user with {userId}.
      responses:
        '200':
          description: User deleted
        '401':
          description: Unauthorized
          schema:
              $ref: "#/definitions/Error"          
        '404':
          description: User not found
          schema:
            $ref: "#/definitions/Error"
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
            
  /business-users/{userId}/role/{roleId}:
    parameters:
      - name: userId
        in: path
        description: "user's identifier"
        required: true
        type: integer
      - name: roleId
        in: path
        description: "role's identifier"
        required: true
        type: integer
    put: 
      summary: FiUber business user role assignation 
      tags:
        - admin
      security:
        - AuthToken: []
      description: |
        Assigns an existing role with {roleId} to a registrated business user with {userId}.
      responses:
        '200':
          description: Role assigned to Business User
        '401':
          description: Unauthorized
          schema:
              $ref: "#/definitions/Error"            
        '404':
          description: Business User or Role not found
          schema:
            $ref: "#/definitions/Error"
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
      
  /business-users/roles:
    get:
      summary: FiUber business users's roles listing
      tags:
        - admin
      security:
        - AuthToken: []
      description: |
        Returns all the business users roles
      responses:
        '200':
          description: Roles
          schema:
            type: array
            items:
              $ref: "#/definitions/Role" 
        '401':
          description: Unauthorized
          schema:
              $ref: "#/definitions/Error"                
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors"
    post:
      summary: FiUber business users's roles registration
      tags:
        - admin
      security:
        - AuthToken: []
      description: |
        Registers a FiUber business user's role.
      parameters:
        - description: "Role"
          in: body
          name: ''
          required: true
          schema:
            $ref: "#/definitions/RoleCreate" 
      responses:
        '200':
          description: Returns registered id
          schema:
            properties:
              id:
                $ref: "#/definitions/Id" 
        '401':
          description: Unauthorized
          schema:
              $ref: "#/definitions/Error"                  
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
            
  /business-users/roles/{name}:
    parameters:
      - name: name
        in: path
        description: "roles's name"
        required: true
        type: integer
    get:
      summary: FiUber business users's roles listing
      tags:
        - app
        - admin
      security:
        - AuthToken: []
      description: |
        Returns business users role with {name}
      responses:
        '200':
          description: Role
          schema:
              $ref: "#/definitions/Role" 
        '401':
          description: Unauthorized
          schema:
              $ref: "#/definitions/Error"  
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
  /trips:
    post:
      summary: FiUber trips registration
      tags:
        - app
      security:
        - AuthToken: []
      description: |
        Registers a trip.
      parameters:
        - description: "Trip"
          in: body
          name: ''
          required: true
          schema:
            $ref: "#/definitions/TripCreate" 
      responses:
        '200':
          description: Returns registered trip id
          schema:
            properties:
              id:
                $ref: "#/definitions/Id" 
        '401':
          description: Unauthorized
          schema:
              $ref: "#/definitions/Error" 
        '500':
          description: Server error
          schema:
            $ref: "#/definitions/Errors" 
      
definitions:
  ApiInfo:
    properties:
      version: 
        $ref: '#/definitions/Version'
      author:
        type: string
        description: |
          API's author.
      release_date:
        type: string
        format: date
        description: |
          API's release date.
          
  Version:
    type: string
    description: API's version
    
  Id:
    type: integer
    description: |
      unique numerical identifier.
      
  Error:
    type: object
    properties:
      error:
        type: string
        description: | 
          error message
  Errors:
    type: array
    items:
      $ref: "#/definitions/Error" 
      
  UserCreate:
    properties:
      username:
        type: string
        description: |
          User's user name.
      password:
        type: string
        format: format> (^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@$!%*?&])[A-Za-z\d$@$!%*?&]{8,})
        description: |
          User's password.
      firstname:
        type: string
        description: |
          User's first name.
      lastname:
        type: string
        description: |
          User's last name.
      email:
        type: string
        format: email
        description: |
          User's contact email.
      birthdate:
        type: string
        format: date
        description: |
          User's birth date.         
      type:
        type: string
        description: |
          User's type 
            - `driver`
            - `passenger`.
      country:
        type: string
        description: |
          User's living country.  
      image: 
        type: string
        format: base64
        description: |
          User's image in base64.    
    required:
      - username
      - password
      - email
      - type
      
  CarCreate:
    properties:
      brand:
        type: string
        description: |
          Car's brand.
      model:
        type: string
        description: |
          Car's model.
      color:
        type: string
        description: |
          Car's color. 
      year:
        type: number
        description: |
          Car's year.   
  
  Car:
    properties:
      id: 
        $ref: '#/definitions/Id'
      brand:
        type: string
        description: |
          Car's brand.
      model:
        type: string
        description: |
          Car's model.
      color:
        type: string
        description: |
          Car's color. 
      year:
        type: number
        description: |
          Car's year.  
      
  Credential:
    properties:
      username:
        type: string
        description: |
          Credential's user name.
      password:
        type: string
        format: format> (^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@$!%*?&])[A-Za-z\d$@$!%*?&]{8,})
        description: |
          BusinessUser's password. (required to create)  
      facebookAuthToken:
        type: string
        description: |
          Credential's facebook token.
  User:
    properties:
      id: 
        $ref: '#/definitions/Id'
      username:
        type: string
        description: |
          User's user name.
      firstname:
        type: string
        description: |
          User's first name.
      lastname:
        type: string
        description: |
          User's last name.
      email:
        type: string
        format: email
        description: |
          User's contact email.
      birthdate:
        type: string
        format: date
        description: |
          User's birth date.         
      type:
        type: string
        description: |
          User's type 
            - `driver`
            - `passenger`.
      country:
        type: string
        description: |
          User's living country.  
      image: 
        type: string
        format: base64
        description: |
          User's image in base64.    
      cars:
        type: array
        items:
          $ref: '#/definitions/Car'
          
          
  BusinessUser:
    properties:
      id: 
        $ref: '#/definitions/Id'
      username:
        type: string
        description: |
          BusinessUser's user name.
      name:
        type: string
        description: |
          BusinessUser's name.
      surname:
        type: string
        description: |
          BusinessUser's surname.          
      role:
       $ref: '#/definitions/Role'
       
  BusinessUserCreate:
    properties:
      username:
        type: string
        description: |
          BusinessUser's user name. (required to create)
      password:
        type: string
        format: format> (^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@$!%*?&])[A-Za-z\d$@$!%*?&]{8,})
        description: |
          BusinessUser's password. (required to create)  
      name:
        type: string
        description: |
          BusinessUser's name. (required to create)
      surname:
        type: string
        description: |
          BusinessUser's surname. 
    required:
      - username
      - password
        
  RoleCreate:
    properties:
      name:
        type: string
        description: |
          Role's name
      deletable:
        type: boolean
        description: |
          Allows (true) or Forbids (false) this role to be deletable.
      buser_deletable:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user to be deletable.
      view_bs_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to view existing business users.
      create_bs_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to create business users.       
      edit_bs_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to edit existing business users.       
      delete_bs_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to delete existing business users.
      view_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to view existing users.  
      edit_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to edit existing users.
      delete_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to delete existing users.          
      view_settings:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to view the settings.
      edit_settings:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to edit the settings. 
    required:
      - name

  TripCreate:
    properties:
      start_location:
        type: array
        items:
          type:
            number
        description: |
          Trip's start location [lat, lon]
      end_location:
        type: array
        items:
          type:
            number
        description: |
          Trip's start location [lat, lon]
      distance:
        type: number
        description: |
          Trip's distance      
      pay_method:
        type: string
        description: |
          Trip's pay method. example -> 'credit'
      currency:
        type: string
        description: |
          Trip's payment currency. example -> '$' 
      cost:
        type: number
        description: |
          Trip's cost.     
      driver_id:
        type: number
        description: |
          Trip's driver. 
      passenger_id:
        type: number
        description: |
          Trip's passenger. 
        
  Role:
    properties:
      id: 
        $ref: '#/definitions/Id'
      name:
        type: string
        description: |
          Role's name
      deletable:
        type: boolean
        description: |
          Allows (true) or Forbids (false) this role to be deletable.
      buser_deletable:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user to be deletable.
      view_bs_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to view existing business users.
      create_bs_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to create business users.       
      edit_bs_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to edit existing business users.       
      delete_bs_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to delete existing business users.
      view_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to view existing users.  
      edit_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to edit existing users.
      delete_users:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to delete existing users.          
      view_settings:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to view the settings.
      edit_settings:
        type: boolean
        description: |
          Allows (true) or Forbids (false) business user with this role, to edit the settings. 